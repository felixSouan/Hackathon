let a, b;  // Semi-major and semi-minor axes
let x0, y0; // Center coordinates
let angle = -5.519999999999927; // Initial angle
let vel = 0.01; // Speed of rotation
let xOffset, yOffset;
let centerX;
let centerY;
let scaleDown = 0.000000001
let limitX;
let limitY;
let img;
let lastX, lastY;

function preload(){
  img = loadImage('https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/1631855/spacex-spaceship-clipart-xl.png');
}

function setup() {
  createCanvas(windowWidth, windowHeight);
  a = 2.1e11 * scaleDown;
  b = 1.59e11 * scaleDown;
  xOffset = 9.3370e10 * scaleDown;
  yOffset = -1.197634e11 * scaleDown;
  centerX = width / 2;
  centerY = height / 2;
  x0 = -2.8e10 * scaleDown;
  y0 = 0.98e10 * scaleDown;
  limitX = centerX + (-1.203e11 * scaleDown);
  limitY = centerY + (1.197634e11 * scaleDown);
  lastX = x0 + centerX + a * cos(angle);
  lastY = y0 + centerY + b * sin(angle);
}

function draw() {
  background(220);

  // Calculate x and y using parametric equations of the ellipse
  let x = x0 + centerX + a * cos(angle);
  let y = y0 + centerY + b * sin(angle);

  // Check if the point is within the specified region
  if (x >= limitX && y <= limitY) {
    // Calculate the angle to point the rocket in the direction of motion
    let angleToRotate = atan2(y - lastY, x - lastX);

    push();
    translate(x, y);
    rotate(angleToRotate + PI / 2); // Rotate by 90 degrees in the opposite direction
    image(img, -10, -25, 20, 50); // Adjust the position and size as needed
    pop();

    lastX = x;
    lastY = y;
  }

  // Increment the angle for animation
  angle -= vel;

  // Reset angle when it completes one rotation
  if (angle >= TWO_PI) {
    angle = 0;
  }
}
